
--1) addres tablosunun kontrol etmek için top 100 ünü çekiniz.

SELECT TOP 100 * FROM ADDRESS;

--2)CITIES tablosuna yeni bir kayıt olarak ID,COUNTRYID VE memleketinizi ekleyin.

INSERT INTO CITIES(ID, COUNTRYID, CITY) VALUES(100, 10, 'JÜPİTER');

--3)[dbo].[USERS] tablosundaki 10 numaralı id yi kendi bilgileriniz ile update edin.

UPDATE USERS
SET USERNAME_='DS_OZTORUN', PASSWORD_='xyzabc', NAMESURNAME='DERYA SAK ÖZTORUN', EMAIL='dsoztorun@gmail.com', GENDER='K', 
BIRTHDATE='1983-02-28', CREATEDDATE= '2025-07-17 09:05:00.000', TELNR1='(544)2808195', TELNR2='(544)2808195'
WHERE ID =10;

--4)[dbo].[SALEORDERS] tablosunda category1 i SEKERLEME OLAN KAYITLARI GETİRİN.

SELECT * FROM SALEORDERS s WHERE CATEGORY1 = 'SEKERLEME';

--5)[dbo].[SALEORDERS] tablosunda LINETOTALI 20.000 DEN BUYUK KAYITLARI GETIRIN.

SELECT * FROM SALEORDERS s WHERE LINETOTAL > 20000;

--6)[dbo].[SALEORDERS] tablosunda haftaiçi olan kayıtları getirin.

SELECT * FROM SALEORDERS s 
WHERE DAYOFWEEK_ IN('Pazartesi','Salı', 'Çarşamba', 'Perşembe', 'Cuma'); 

--7)[dbo].[SALEORDERS] tablosunda pazar günü ve Tablet satışlarını getirin.

SELECT * FROM SALEORDERS s WHERE CATEGORY4 = 'Tablet' AND DAYOFWEEK_ = 'Pazar';

--8)[dbo].[ITEMS]tablosunda kaç tane tekil category1 vardır.

SELECT COUNT(DISTINCT CATEGORY1)TEKIL_CATEGORY1 FROM ITEMS; 

--9)[dbo].[ITEMS]tablosundaki ürünleri unitprice a göre büyükten küçüğe sıralayınız.

SELECT * FROM ITEMS i ORDER BY UNITPRICE DESC;

--10)[dbo].[SALEORDERS] tablosunda şehirlere göre (SUM,COUNT,MIN,MAX,AVG) adeti getirin.

SELECT CITY, COUNT(ORDERID)TOPLAM_SIPARIS_SAYISI, SUM(LINETOTAL)TOPLAM_CIRO, MIN(LINETOTAL)MIN_CIRO, MAX(LINETOTAL)MAX_CIRO, 
AVG(LINETOTAL)ORTALAMA_CIRO FROM SALEORDERS s
GROUP BY CITY
ORDER BY TOPLAM_CIRO DESC;

--11) ÜRÜN KATEGORİLERİNE GÖRE TOPLAM SATIŞLARı getirin.

SELECT CATEGORY1, SUM(LINETOTAL)TOPLAM_CIRO FROM SALEORDERS GROUP BY CATEGORY1 ORDER BY TOPLAM_CIRO DESC;

--12)order ve user tablolarını left,right ve inner olarak şekilde birleştiriniz.

SELECT COUNT(*), COUNT(DISTINCT USERID) FROM ORDERS; -- Toplam 101.259 satır, 9.677 adet tekil USERID bulunmaktadır
SELECT COUNT(*), COUNT(DISTINCT ID) FROM USERS;		 -- Toplam 9.678 satır, 9.678 adet de tekil ID bulunmaktadır.

SELECT * FROM ORDERS O
LEFT JOIN USERS U ON O.USERID = U.ID; -- ORDERS tablosundaki tüm kayıtlar, USERS tablosundan da ilgili kullanıcı bilgileri gelir.

SELECT * FROM USERS U
LEFT JOIN ORDERS O ON O.USERID = U.ID;  -- USERS tablosundaki tüm kullanıcılar ve her kullanıcıya ait sipariş bilgisi gelir.

SELECT * FROM ORDERS O				    -- USERS tablosundaki tüm kullanıcılar ve siparişle eşleşen kullanıcıların sipariş bilgileri gelir.
RIGHT JOIN USERS U ON O.USERID = U.ID;  -- 2. sorgunun aynısıdır, sadece tablolardaki pozisyonlar değişmiştir.
									   
SELECT * FROM USERS U				    -- ORDERS tablosundaki tüm kayıtlar, USERS tablosundan da eşleşen kullanıcı bilgileri gelir.
RIGHT JOIN ORDERS O ON O.USERID = U.ID; -- 1. sorgunun aynısıdır, sadece tablolardaki pozisyonlar değişmiştir.
										
SELECT * FROM ORDERS O 
INNER JOIN USERS U ON O.USERID = U.ID;  -- Eşleşen tüm kayıtlar gelir.

SELECT COUNT(*) FROM ORDERS O
LEFT JOIN USERS U ON O.USERID = U.ID
WHERE U.ID IS NULL; 					-- 0 çıkmaktadır. ORDERS tablosunda USERS tablosuyla eşleşmeyen kayıt olmadığı görülmektedir.

SELECT COUNT(*) FROM USERS U
LEFT JOIN ORDERS O ON O.USERID = U.ID   -- 1 çıkmaktadır. USERS tablosunda ORDERS tablosuyla eşleşmeyen 1 kayıt olduğu görülmektedir.
WHERE O.USERID IS NULL;

--13)adress ve user tablolarını left,right ve inner olarak şekilde birleştiriniz.

SELECT COUNT(*), COUNT(DISTINCT USERID) FROM ADDRESS;  -- Toplam 25.051 satır, 9.992 adet tekil USERID bulunmaktadır.
SELECT COUNT(*), COUNT(DISTINCT ID) FROM USERS;    	   -- Toplam 9.678 satır, 9.678 adet tekil ID bulunmaktadır. 
-- O halde ADDRESS tablosunda bulunan bütün USERID'lerin USERS tablosunda ID karşılığı yoktur (en az 9.962-9.678 = 314 tanesinin kesinlikle yoktur). 
-- USERS tablosundaki tüm ID'lerin ADDRESS tablosundaki USERID'lerle ne kadar eşleştiğini görmek için önce INNER JOIN'le bakalım:

SELECT COUNT(*) FROM ADDRESS A
INNER JOIN USERS U ON U.ID = A.USERID;  -- 24.270 satırlık veri gelmektedir. 781 adet veri eşleşmemektedir.

SELECT COUNT(*) FROM ADDRESS A			-- 781 değeri görülmektedir. 
LEFT JOIN USERS U ON U.ID = A.USERID    -- Yani ADDRESS tablosundaki USERID'lerden 781 adedinin USERS tablosunda ID eşleşmesi yoktur.  
WHERE U.ID IS NULL;	

SELECT COUNT(*) FROM USERS U			 -- 3 değeri görülmektedir. 
LEFT JOIN ADDRESS A ON U.ID = A.USERID;  -- Yani USERS tablosundaki ID'lerden 3 adedinin ADDRESS tablosunda USERID eşleşmesi yoktur. 
WHERE A.USERID IS NULL;

SELECT * FROM ADDRESS A
LEFT JOIN USERS U ON U.ID = A.USERID;   -- 25.051 satırlık veri gelmektedir.

SELECT * FROM USERS U
LEFT JOIN ADDRESS A ON U.ID = A.USERID; -- 24.273 satırlık veri gelmektedir.

SELECT * FROM ADDRESS A
RIGHT JOIN USERS U ON U.ID = A.USERID;  -- 24.273 satırlık veri gelmektedir.

SELECT * FROM USERS U
RIGHT JOIN ADDRESS A ON U.ID = A.USERID;-- 25.051 satırlık veri gelmektedir.

--14)En fazla alışveriş hangi markada yapılmıştır.

SELECT TOP 1 SUM(OD.AMOUNT)TOPLAM_SATIS_ADEDI,I.BRAND FROM ORDERDETAILS OD
JOIN ITEMS I ON I.ID = OD.ITEMID
GROUP BY OD.ITEMID, I.BRAND
ORDER BY SUM(OD.AMOUNT) DESC;

--15)oyuncak ANA KATEGORİSİNDE KATEGORİSİNDE, ZEKA GELISTIRICI UST KATEGORISINDE,OYUNCAKLAR ALT KATEGORISINDE EN FAZLA SATIŞ YAPAN, 
   --bebe oyuncakları nelerdir?

SELECT TOP 1 SUM(OD.AMOUNT)TOPLAM_SATIS_ADEDI, I.CATEGORY1, I.CATEGORY2, I.CATEGORY3, OD.ITEMID, I.BRAND, I.ITEMNAME FROM ORDERDETAILS OD
JOIN ITEMS I ON I.ID = OD.ITEMID
WHERE I.CATEGORY1 = 'OYUNCAK'
  AND I.CATEGORY2 = 'ZEKA GELISTIRICI'
  AND I.CATEGORY3 = 'OYUNCAKLAR'
GROUP BY I.CATEGORY1, I.CATEGORY2, I.CATEGORY3, OD.ITEMID, I.BRAND, I.ITEMNAME
ORDER BY SUM(OD.AMOUNT) DESC

--16) TEMIZLIK KATEGORİSİNDEKI URUNLERIN ORTALAMA FİYAT NEDİR

SELECT AVG(OD.UNITPRICE)ORT_FIYAT, I.CATEGORY1, I.BRAND, I.ITEMNAME FROM ORDERDETAILS OD
JOIN ITEMS I ON I.ID = OD.ITEMID
WHERE I.CATEGORY1= 'TEMIZLIK'
GROUP BY I.CATEGORY1, I.BRAND, I.ITEMNAME;

--17) HANGİ YAŞ GRUPLARI DAHA FAZLA ALIŞVERİŞ YAPMIŞTIR

SELECT TOP 1
CASE 
    WHEN YEAR(GETDATE()) - YEAR(U.BIRTHDATE) < 20 THEN 'GENÇ'
    WHEN YEAR(GETDATE()) - YEAR(U.BIRTHDATE) BETWEEN 21 AND 35 THEN 'YETİŞKİN'
    WHEN YEAR(GETDATE()) - YEAR(U.BIRTHDATE) BETWEEN 36 AND 55 THEN 'ORTA YAŞ'
    ELSE 'YAŞLI' 
END AS YAS_GRUBU, COUNT(DISTINCT O.USERID)SIPARIS_SAYISI
FROM USERS U
JOIN ORDERS O ON U.ID = O.USERID
GROUP BY 
CASE 
    WHEN YEAR(GETDATE()) - YEAR(U.BIRTHDATE) < 20 THEN 'GENÇ'
    WHEN YEAR(GETDATE()) - YEAR(U.BIRTHDATE) BETWEEN 21 AND 35 THEN 'YETİŞKİN'
    WHEN YEAR(GETDATE()) - YEAR(U.BIRTHDATE) BETWEEN 36 AND 55 THEN 'ORTA YAŞ'
    ELSE 'YAŞLI' 
END
ORDER BY SIPARIS_SAYISI DESC;

--18)[dbo].[ITEMS] TABLOSUNDAKİ TÜM CATERGORYLERİ BİRLEŞTİRİN.

SELECT CONCAT(CATEGORY1, '-', CATEGORY2, '-', CATEGORY3, '-', CATEGORY4)BIRLESTIRILMIS_KATEGORILER
FROM ITEMS;

--19)[dbo].[PAYMENTS] TABLOSUNDAKİ APPROVECODE KOLONUNUN ILK 5 DEĞERİNİ AYRI BİR KOLON OLARAK YAZIN.

SELECT LEFT(APPROVECODE, 5) FROM PAYMENTS;

--20)--19)[dbo].[PAYMENTS] TABLOSUNDAKİ SAYISAL DEĞERLERİ AYRI BİR KOLON OLARAK YAZIN.

SELECT CONCAT(ID, '-', ORDERID, '-', PAYMENTTYPE, '-', ISOK, '-', PAYMENTTOTAL)BIRLESTIRILMIS_SAYISAL_DEG  FROM PAYMENTS;

--21)[dbo].[USERS] TABLOSUNDAKİ PASSWORD KOLONUNU TÜM DEĞERLERİ BÜYÜK YAZIN.

SELECT UPPER(PASSWORD_)PSSWRD FROM USERS; 

--22)[dbo].[USERS] TABLOSUNDAKİ NAMESURNAME  KOLONUNUNDAKİ SOYİSİMLERİ TÜM DEĞERLERİ KÜÇÜK YAZIN.

SELECT 
  LEFT(NAMESURNAME, LEN(NAMESURNAME) - CHARINDEX(' ', REVERSE(NAMESURNAME)))AD,
  LOWER(RIGHT(NAMESURNAME, CHARINDEX(' ', REVERSE(NAMESURNAME)) - 1))soyad
FROM USERS;

--23)[dbo].[INVOICES] TABLOSUNDAKİ DATE KOLONUNU AŞAĞIDAKİ FORMATLARA ÇEVİRİN.
			--mm/dd/yyyy
			--yyyy.mm.dd
			--dd.mm.yyyy
			--yyyymmdd
SELECT 
  DATE_, 
  FORMAT(DATE_, 'mm/dd/yyyy')DATE_1,
  FORMAT(DATE_, 'yyyy.mm.dd')DATE_2,
  FORMAT(DATE_, 'dd.mm.yyyy')DATE_3,
  FORMAT(DATE_, 'yyyymmdd')DATE_4
FROM INVOICES;

--24)[dbo].[INVOICES] TABLOSUNDAKİ DATE KOLONUNU YIL,AY,GUN,HAFTA OLARAK AYRI AYIR KOLONLARDA GÖSTERİN.

SELECT 
  DATE_,
  YEAR(DATE_)YIL,
  MONTH(DATE_)AY,
  DAY(DATE_)GUN,
  DATEPART(WEEK, DATE_)HAFTA
FROM INVOICES;

--25)[dbo].[SALEORDERS] TABLOSUNDAKİ MONTH KOLONUNA GÖRE HANGİ AYIN HANGİ MEVSİME GELDİĞİNİ YAZIN.

SELECT 
  MONTH_,
  CASE 
    WHEN MONTH_ IN ('ARALIK', 'OCAK', 'ŞUBAT') THEN 'KIŞ'
    WHEN MONTH_ IN ('MART', 'NİSAN', 'MAYIS') THEN 'İLKBAHAR'
    WHEN MONTH_ IN ('HAZİRAN', 'TEMMUZ', 'AĞUSTOS') THEN 'YAZ'
    WHEN MONTH_ IN ('EYLÜL', 'EKİM', 'KASIM') THEN 'SONBAHAR'
    ELSE '-'
  END AS MEVSIM
FROM SALEORDERS;

--26)[dbo].[ITEMS] TABLOSUDNAKİ BRANDLERİ AŞAĞIDAKİ KURALA GÖRE YENİ BİR KOLON OLUŞTURUNUZ.
		--ULKER ISE YEME ICME
		--REXONA ISE KOZMETIK
		--ALGIDA ISE DONDURMA
		--NESCAFE ISE SICAKICECEK
		--BUNLARIN DIŞINDAKILER DIGER
		
SELECT 
  BRAND,
  CASE 
    WHEN BRAND = 'ULKER' THEN 'YEME ICME'
    WHEN BRAND = 'REXONA' THEN 'KOZMETIK'
    WHEN BRAND = 'ALGIDA' THEN 'DONDURMA'
    WHEN BRAND = 'NESCAFE' THEN 'SICAKICECEK'
    ELSE 'DIGER'
  END AS MARKA_YENI
FROM ITEMS;
